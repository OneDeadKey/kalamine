; Generated by kalamine.

; This is an AutoHotKey 1.1 script. PKL and EPKL still rely on AHK 1.1, too.
; AutoHotKey 2.0 is way too slow to emulate keyboard layouts at the moment
; — or maybe we’ve missed the proper options to speed it up.

#NoEnv
#Persistent
#InstallKeybdHook
#SingleInstance,       force
#MaxThreadsBuffer
#MaxThreadsPerHotKey   3
#MaxHotkeysPerInterval 300
#MaxThreads            20

SendMode Event ; either Event or Input
SetKeyDelay,   -1
SetBatchLines, -1
Process, Priority, , R
SetWorkingDir, %A_ScriptDir%
StringCaseSense, On


;-------------------------------------------------------------------------------
; On/Off Switch
;-------------------------------------------------------------------------------

global Active := True

HideTrayTip() {
  TrayTip  ; Attempt to hide it the normal way.
  if SubStr(A_OSVersion,1,3) = "10." {
    Menu Tray, NoIcon
    Sleep 200  ; It may be necessary to adjust this sleep.
    Menu Tray, Icon
  }
}

ShowTrayTip() {
  title := "${name}"
  text := Active ? "ON" : "OFF"
  HideTrayTip()
  TrayTip, %title% , %text%, 1, 0x31
  SetTimer, HideTrayTip, -1500
}

RAlt & Alt::
Alt & RAlt::
  global Active
  Active := !Active
  ShowTrayTip()
  return

#If Active
SetTimer, ShowTrayTip, -1000  ; not working


;-------------------------------------------------------------------------------
; DeadKey Helpers
;-------------------------------------------------------------------------------

global DeadKey := ""

DoTerm(base:="") {
  global DeadKey

  term := SubStr(DeadKey, 2, 1)

  CapsLockOn := GetKeyState("CapsLock", "T") 
  
  if %CapsLockOn% {
    StringUpper, term, term
    StringUpper, base, base
  }

  Send, {%term%}
  Send, {%base%}
  DeadKey := ""
}

DoAction(action:="") {
  global DeadKey

  if (action == "U+0020") {
    Send, {SC39}
    DeadKey := ""
  }
  else if (StrLen(action) != 2) {
    CapsLockOn := GetKeyState("CapsLock", "T") 
  
    if %CapsLockOn% {
      StringUpper, action, action
    }
    
    Send, {%action%}
    DeadKey := ""
  }
  else if (action == DeadKey) {
    DoTerm(SubStr(DeadKey, 2, 1))
  }
  else {
    DeadKey := action
  }
}

SendKey(base, deadkeymap) {
  if (!DeadKey) {
    DoAction(base)
  }
  else if (deadkeymap.HasKey(DeadKey)) {
    DoAction(deadkeymap[DeadKey])
  }
  else {
    DoTerm(base)
  }
}


;-------------------------------------------------------------------------------
; Base
;-------------------------------------------------------------------------------

KALAMINE::LAYOUT

;-------------------------------------------------------------------------------
; Ctrl
;-------------------------------------------------------------------------------

KALAMINE::SHORTCUTS
